name: deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["22.2.0"]

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      NODE_ENV: ci
      PORT: 3000

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache root node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache client node_modules
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-node-modules-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-node-modules-

      - name: Install Dependencies
        run: |
          npm install --legacy-peer-deps
          npm run build



      - name: Clear Puppeteer Cache
        run: rm -rf /home/runner/.cache/puppeteer

      - name: Install Puppeteer Chrome
        run: npx puppeteer install



      - name: Start server
        run: |
          nohup npm run start &
          sleep 3

      - name: Run tests
        run: npm run test